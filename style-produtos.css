body{
    font-family: 'Montserrat',
    sans-serif;
}

header{
    background: #BBBBBB;
    padding: 20px 0;
    /*espa√ßamento para cima e para baixo de 20px,
    e de 0 para a direita e esquerda.*/
}

.caixa{
    position: relative;
    width: 940px;
    margin: 0 auto;
    /*aqui as margens se calcuam sozinhas, pois 
    se eu boto 50 de um lado e 50 do outro, pode 
    ser que numa tela de 1.300 pixels, ele n√£o fique 
    centralizado, se eu boto 200 de um lado e 200 
    do outro, pode ser que numa tela de 1.000 pixels, 
    ele n√£o fique centralizado, por isso, a gente 
    precisa que essa margem da direita e a margem da 
    esquerda, elas se calculem sozinhas, elas sejam 
    autom√°ticas.
    Delegamos para o navegador fazer a conta de 
    calcular a largura que resta, dividir por dois, 
    e adicionar metade em cada um dos lados.*/
}
/*essa classe est√° centralizando 
o que est√° dentro do cabe√ßalho.*/

nav {
    position: absolute;
    /*Com o position: absolute, eu consigo 
    posicionar meu elemento em qualquer 
    lugar da p√°gina.*/
    top: 100px;
    right: 0;
}



nav li{
    /*Inline, ele s√≥ ocupa o tamanho dele.*/
    display: inline;
    /*aqui definiremos o espa√ßamento entre um item 
    e outro atrav√©s da margem. E ela √© definida assim: 
    primeiro para o topo, depois para a direita, terceiro 
    para baixo e por ultimo para a esquerda. Como queremos 
    aumentar somente para a esquerda, ent√£o s√≥ trocaremos 
    o valor dessa.*/
    margin: 0 0 0 15px;
}

nav a{
    /*transformando todas as letras da TAG a em 
    mai√∫sculas.
    Explica√ß√£o do Teacher:
    A propriedade text-transform √© a respons√°vel 
    pela transforma√ß√£o do texto para mai√∫sculo, 
    quando usamos o valor uppercase.*/
    text-transform: uppercase;
    color: #000000;
    /*peso da fonte em negrito*/
    font-weight: bold;
    /*tamanho da fonte*/
    font-size: 1.5rem;
    /*aqui retiramos o sublinhado padr√£o*/
    text-decoration: none;

}
/*para mapear o comportamento dos links que est√£o 
dentro do menu de navega√ß√£o, quando o mouse 
passar por cima do elemento usamos o hover, √© 
quando mouse est√° por cima do elemento.*/
nav a:hover{
    /*essa cor vai aparecer ao passar do mouse*/
    color: #C78C19;
     /*o sublinhado vai aparecer ao passar do mouse*/
    text-decoration: underline;
}

.produtos{
    width: 940px;
    margin: 0 auto;
    /*largura da lista por inteiro*/
    padding: 50px 0;
}

.produtos li{
    /*Como o inline-block se comporta?
    O tamanho pode ser ajustado, tanto 
    na largura, quanto na altura.*/
    display: inline-block;
    text-align: center;
    width: 30%;
    /*largura de cada item*/
    vertical-align: top;
    /*os itens v√£o recarrecar sempre pela linha de cima*/
    margin: 0 1.5%;
    margin-bottom: 2.8rem;
    padding: 50px 20px;
    box-sizing: border-box;
    /*essa linha de comando faz com que o item
    com o tamanho dele*/

    /*fazendo a borda.
    Na estrutura de "caixas" do CSS, 
    a borda fica posicionada entre o 
    padding e a margin
    cor da linha
    border-color: #000000;
    tamanho da linha
    border-width: 2px;
    estilo da linha
    border-style: solid;*/

    /*declara√ß√£o unificada da borda*/
    border: 0.2rem solid #000000;
    /*arredondando os campus*/
    border-radius: 1rem; 
}

/*No hover, mapeamos o comportamento do mouse por cima do elemento, e podemos usar isso para destacar visualmente o elemento em quest√£o.*/
.produtos li:hover{
    border-color:#C78C19;
}

/*quando o mouse estiver sendo clicado, o conte√∫do
vai ficar verde*/
.produtos li:active{
    border-color:#088C19;
}

/*quando passar o mouse por cima do h2, ele vai mudar de tamanho*/
.produtos li:hover h2{  
    font-size: 1.8rem;
}

.produtos h2{
    font-size: 1.5rem;
    font-weight: bold;
}

.produto-descricao{
    font-size: 1rem;
}

.produto-preco{
    font-size: 2rem;
    font-weight: bold;
    margin-top: 1rem;
}

footer{
    text-align:center;
    /*colocanco uma imagem de fundo*/
    background:url("bg.jpg");
    padding:40px 0;
}

.copyrights{
    color: #FFFFFF;
    font-size: 13px;
    margin:20px 0 0;
}

/*centralizando todo o conte√∫do
main {
}
*/
.formulario {
    /*aqui damos o espa√ßamento entre o cabe√ßalho e rodap√©*/
    margin: 40px 20px;
}

form label, form legend{
    display: block;
    font-size: 20px;
    /*espa√ßamento entre uma label e outra*/
    margin: 0 0 10px;

}

/*aqui tanto os campos de entrada como o campo de texto ter√£o as mesmas configura√ß√µes*/
.input-padrao{
    display: block;
    margin: 0 0 20px;
    /*A propriedade padding serve para alterarmos o espa√ßamento interno, entre o conte√∫do e a borda.Aumentando o tamanho do campo para cima e para baixo*/
    padding: 10px 25px;
    /*aumentando a largura do campo, para os lados.*/
    width:50%;
}

.checkbox{
    margin:20px 0;
}

.botao-enviar{
    /*aqui aumentamos o tamanho do bot√£o,mexendo na largura dela, fazendo com que ele ocupe 40% da p√°gina.*/
    width: 40%;
    /*com o padding daremos o espa√ßamento entre a borda e o texto. 15px para cima e para baixo e 0 para os lados.*/
    padding: 15px 0;
    background: orange;
    color: white;
    font-weight: bold;
    font-size:18px;
    border: none;
    /*arredondando a borda*/
    border-radius: 5px;
    /*esse elemento faz com que a cor do bot√£o mude gradativamente, deixando essa transi√ß√£o mais suave para todos os elementos.
    Explica√ß√£o do Teacher:
    Utilizamos a propriedade transition para prover uma transi√ß√£o visual de um elemento.*/
    transition: 1s all;
    /*para transformar o cursor em uma m√£ozinha, assim indicando para o usu√°rio que √© poss√≠vel clicar.*/
    cursor:pointer;
}

.botao-enviar:hover{
    background: darkorange;
    /*A propriedade transform tem muitas possibilidades, uma delas √© aumentar o tamanho do elemento, para isso usamos o scale(escala) e definimos a propor√ß√£o que queremos, ele mesmo faz o calculo multiplicando ele por 1.2.
    Explica√ß√£o do Teacher:
    Utilizamos a propriedade transform: scale() para aumentar um elemento proporcionalmente.*/
    transform:scale(1.2);
}

table{
    margin: 20px 20px 40px;
}

thead{
    background: #555555;
    color: #FFFFFF;
    font-weight: bold;
}

th, td{
    border: 1px solid #000000;
    padding: 8px 15px;
}

/*css da p√°gina inicial*/
.banner{
    width: 100%;
}

.titulo-principal{
    text-align: center;
    /*2em transforma a fonte em duas vezes o valor padr√£o, por exemplo, a fonte tem tamanho 15, ela ser√° transformada em 30 proporcionalmente*/
    font-size: 2em;
    margin: 0 0 1em;
    clear: left;
    /*o clear limpa o float, pq o float altera tudo que estiver a baixo dele.*/
}

/*vemos aqui como transformar somente a primeira letra dos t√≠tulos em negrito
.titulo-principal:first-letter{
    font-weight: bold;
}*/
.principal{
    padding: 3em 0;
    background: #fefefe;
    width: 940px;
    margin: 0 auto;
}

.principal p {
    margin: 0 0 1em;
}

.principal strong {
    font-weight: bold;
}

.principal em {
    font-style: italic;
}

.utensilios{
    width: 120px;
    float: left;
    /*Tanto o float:left quanto o float: right servem para que o elemento se destaque na tela,
    deixe de ocupar o espa√ßo em que estava,
    para que os outros elementos possam se posicionar ao redor dele*/
    margin:0 20px 20px 0;
}

.mapa {
    padding: 3em 0;
    background: linear-gradient(#FEFEFE, #888888);
    /*como fazer transi√ß√£o de cores*/
}

.mapa-conteudo{
    width: 940px;
    margin: 0 auto;
}

.mapa p {
    margin: 0 0 2em;
    text-align: center;
}

.beneficios{
    padding: 3em 0;
    background: #888888;
}

.conteudo-beneficios{
    width: 640px;
    margin: 0 auto;
}

.lista-beneficios{
    width: 40%;
    display: inline-block;
    vertical-align: top;
}

.itens{
    line-height:1.5;
    /*Essa propriedade d√° espa√ßamento entre as linhas*/
}

.itens:first-child{
    /*usando uma pseudo-classe para deixar o primeiro item em negrito, que pode ser first-child(primeiro da lista), last-child(ultimo da lista) ou nth-child()(dentro do parentese voc√™ coloca o n√∫mero em que o elemento que voc√™ quer mudar est√°. Se adicionar o n ap√≥s o n√∫mero, voc√™ pode selecionar os n√∫meros pares 2n por exemplo)*/
    font-weight: bold;
}

/*colocando a estrela antes de cada item.
Quando queremos criar um elemento na p√°gina,
via CSS,
antes do elemento do HTML,
usamos a propriedade :before.*/
.itens:before{
    content:"üüä";
}

.imagem-beneficios{
    width: 60%;
    /*opacity cria um filme na imagem*/
    opacity: 1;
    transition: 400ms;
    /*criando sombra nas imagens, eixos Y e X, o terceiro parametro √© para determinar a solidez da sombra, o quarto elemento √© a intensidade, a cor √© o itemf inal*/
    box-shadow: 10px 10px 30px 0 #000000;
}

.imagem-beneficios:hover{
    opacity: 0.3;
}

.video {
    width: 560px;
    margin: 2em auto;
}

/*aqui conseguimos puxar somente os par√°grafos que s√£o filhos diretos do main, ou seja, os paragrafos que est√£o dentro do section, n√£o seram modificados.
main > p{
    background: red;
}

/*img como elemento ancora. aqui modificaremos o primeiro o par√°grafo que veem depois de imagens
img + p{
    background: blue;
}

/*img como elemento ancora. aqui modificaremos
todos os par√°grafos que veem depois de imagem
img ~ p{
    background: yellow;
}

/*Como fazemos para selecionar o √∫ltimo <h2>?
section>p+h2 {
    background: pink;
}*/

/*aqui colocar√° em laranja todos os paragrafos que n√£o usam o id missao
.principal p:not(#missao){
    background: orangered;
}*/

/*Para que o CSS seja adaptado para que ele funcione em telas at√© 480px, precisamos usar as medias queries, que perguntar√° ao navegador qual √© o tamanho da tela em quest√£o e, se for aquele que desejamos, entregaremos o estilo correto.
Para realizar isso, utilizaremos o @media, com o valor do tipo de tela screen e a pesquisa. Todas as telas que tenham at√© 450, ter√£o esse estilo diferente, reescrito. 
Para realizar isso,
utilizaremos o @media,
com o valor do tipo de tela screen e a pesquisa. Todas as telas que tenham at√© 450,
ter√£o esse estilo diferente,
reescrito.*/
@media screen and (max-width:480px){
    /*aqui estamos inserindo uma altura autom√°tica nos elementos que est√£o dentro dessas classes*/
    .caixa, .principal, .conteudo-beneficios, .mapa-conteudo, .video{
        width: auto;
    }

    /*a imagem do logo h1 sendo centralizado*/
    h1, h2, .formulario, .produtos{
        text-align: center;
        margin: 30px 25px 40px 10px;
        
    }

    table{
        margin: 20px;
    }
    /*o menu que est√° dentro da TAG nav se torna est√°tica*/
    nav{    
        position: static;
    }

    /*ambos ocuparam 100% da p√°gina e ficaram um a baixo do outro, assim ficando mais organizado.*/
    .lista-beneficios, .imagem-beneficios, .produtos, .produtos li, .input-padrao, table {
        width:90%;
    }
}
